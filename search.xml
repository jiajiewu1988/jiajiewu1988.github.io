<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[JavaScript: append, appendChild, and innerHTML]]></title>
      <url>https://jiajiewu1988.github.io/2016/12/08/JavaScript-append-appendChild-and-innerHTML/</url>
      <content type="html"><![CDATA[<p>There are several ways to add nodes to DOM, <strong>jQuery.append</strong>, <strong>Node.appendChild</strong>, and <strong>Node.innerHTML</strong> are 3 major ways that are being used to add nodes to a DOM element.</p>
<h2 id="append"><a href="#append" class="headerlink" title="append()"></a>append()</h2><p><a href="http://api.jquery.com/append/" target="_blank" rel="external">jQuery Documentation</a></p>
<p><em>append()</em> offers a convenient way to insert nodes into DOM object. We can either pass in a string or a DOM element. If passing in a string, the string has to be in valid html or xml format.</p>
<p><em>append()</em> and <em>appendTo()</em> perform the same task. <strong>Difference</strong> is the placement of content and target.</p>
<p>Source Code:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">append: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.domManip( <span class="built_in">arguments</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> elem </span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> ( <span class="keyword">this</span>.nodeType === <span class="number">1</span> || <span class="keyword">this</span>.nodeType === <span class="number">11</span> || <span class="keyword">this</span>.nodeType === <span class="number">9</span> ) &#123;</div><div class="line">            <span class="keyword">var</span> target = manipulationTarget( <span class="keyword">this</span>, elem );</div><div class="line">            target.appendChild( elem );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="appendChild"><a href="#appendChild" class="headerlink" title="appendChild()"></a>appendChild()</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild" target="_blank" rel="external">MDN Documentation</a></p>
<p>The <strong>Node.appendChild()</strong> method adds a node to the end of the list of children of a specified parent node.</p>
<p>Note that if a node you want to append already exists in DOM, <em>appendChild()</em> first removes the node from it’s original place, then append it to the new place.</p>
<h2 id="innerHTML"><a href="#innerHTML" class="headerlink" title="innerHTML"></a>innerHTML</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML" target="_blank" rel="external">MDN Documentation</a></p>
<p>The <strong>Element.innerHTML</strong> property sets or gets the HTML syntax describing the element’s descendants.</p>
<h2 id="append-V-S-appendChild-V-S-innerHTML"><a href="#append-V-S-appendChild-V-S-innerHTML" class="headerlink" title="append() V.S. appendChild() V.S. innerHTML"></a>append() V.S. appendChild() V.S. innerHTML</h2><p><em>append()</em> is a extension of <em>appendChild()</em> as we can see from <em>append()</em>‘s source code. <em>append()</em> is more flexible because it can take either html string and DOM element. </p>
<p><span style="background-color:#ea8b54"><em>innerHTML</em> is different from <em>appendChild()</em>. Everytime, when the <em>innerHTML</em> is changed, browser does a complete rebuild of the content of the target element.</span></p>
<p><span style="background-color:#54bbea"><em>appendChild()</em> does not cause a complete rebuild of the DOM.</span></p>
<p>Resources:</p>
<ul>
<li><a href="http://stackoverflow.com/a/2305677/1155155" target="_blank" rel="external">http://stackoverflow.com/a/2305677/1155155</a></li>
</ul>
<h2 id="Performance-Comparasion"><a href="#Performance-Comparasion" class="headerlink" title="Performance Comparasion"></a>Performance Comparasion</h2><p><a href="http://jsben.ch/#/nMElN" target="_blank" rel="external">append, appendChild, and innerHTML benchmark</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Notes for CSS Position]]></title>
      <url>https://jiajiewu1988.github.io/2016/11/14/Notes-for-CSS-Position/</url>
      <content type="html"><![CDATA[<h2 id="CSS-Position-Values"><a href="#CSS-Position-Values" class="headerlink" title="CSS Position Values"></a>CSS Position Values</h2><ul>
<li>absolute</li>
<li>relative</li>
<li>fixed</li>
<li>static</li>
<li>sticky (new)</li>
</ul>
<h2 id="Browser-compatibility-for-sticky-position"><a href="#Browser-compatibility-for-sticky-position" class="headerlink" title="Browser compatibility for sticky position"></a>Browser compatibility for <strong><em>sticky</em></strong> position</h2><img src="/2016/11/14/Notes-for-CSS-Position/sticky-browser-compatibility.png" alt="example" title="example">
<h2 id="relative-v-s-absolute"><a href="#relative-v-s-absolute" class="headerlink" title="relative v.s. absolute"></a><strong>relative</strong> v.s. <strong>absolute</strong></h2><p>Both <strong>relative</strong> and <strong>absolute</strong> are positioned relative to the <strong>nearest positioned ancestor</strong></p>
<p><strong>relative</strong> adjusts elements position so they do not overlap each other.</p>
<p><strong>absolute</strong> does not leave space for the element. Instead, position it at a specific position only relays to its cloest positioned ancestor.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position" target="_blank" rel="external">MDN Documentation</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Setup Up My Hexo Blog on Github Pages]]></title>
      <url>https://jiajiewu1988.github.io/2016/11/11/Setup-Up-My-Hexo-Blog-on-Github-Pages/</url>
      <content type="html"><![CDATA[<p>Github Pages给用户提供了很方便的Blog Hosting的解决方案，可以非常方便的用诸如hexo, jekyll等的 Static Page CRM来管理Blog。</p>
<p>因为题主对node.js和npm熟悉一点，就选用了hexo，来管理个人的github Pages<br><br><br></p>
<h1 id="Blog-Initiation"><a href="#Blog-Initiation" class="headerlink" title="Blog Initiation"></a>Blog Initiation</h1><ul>
<li>Create Git Repo on Github<ul>
<li>github允许每个account有一个repository作为github page repo，repo的名字必须符合 <strong><your username="">.github.io</your></strong> 的 format. 比如 jiajiewu1988.github.io</li>
</ul>
</li>
<li>安装hexo<ul>
<li>首先要安装 <strong>nodejs</strong> 和 <strong>npm</strong>，hexo 由 npm 来管理</li>
<li>安装hexo package: <code>npm install hexo-cli -g</code></li>
</ul>
</li>
<li>创建hexo project<ul>
<li>use command: <code>hexo init &lt;your_project_name&gt;</code></li>
</ul>
</li>
<li><p>设置 Deployment to Github</p>
<ul>
<li>安装 hexo 的 git plugin:<ul>
<li><code>npm install hexo-deployer-git --save</code></li>
</ul>
</li>
<li><p>修改 hexo config - _config.yml:</p>
<ul>
<li><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> git</div><div class="line"><span class="attr">  repo:</span> &lt;github repo link<span class="string">&gt;</span></div><div class="line"><span class="attr">  branch:</span> &lt;optional<span class="string">&gt;</span></div><div class="line"><span class="attr">  message:</span> &lt;optional<span class="string">&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>type</strong> 和 <strong>repo</strong> 是必须的。</p>
</li>
<li>如果使用github, branch的值为空，那hexo会自动detect branch.</li>
<li>message的默认值是 <code>Site updated \{\{ now\(&#39;YYYY-MM-DD HH:mm:ss&#39;\) \}\}</code></li>
</ul>
</li>
</ul>
</li>
<li>Setup SSH Key with Github<ul>
<li>为了方便 deploy, 建议使用 ssh 方式来同步 git repo</li>
<li>Follow 以下链接来 setup ssh key<ul>
<li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="external">Generating a new SSH key and adding it to the ssh-agent</a></li>
<li><a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/" target="_blank" rel="external">Adding a new SSH key to your GitHub account</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="更换-hexo-theme"><a href="#更换-hexo-theme" class="headerlink" title="更换 hexo theme"></a>更换 hexo theme</h1><ul>
<li>找到想要更换的 theme，<strong>git clone</strong> 到hexo下的theme directory中<br><code>git clone https://github.com/hexo-theme-again.git themes/again</code></li>
<li>到hexo主目录下的_config.yml下修改<strong>theme</strong>的值<br><code>theme: again</code></li>
</ul>
<h1 id="管理-media-files"><a href="#管理-media-files" class="headerlink" title="管理 media files"></a>管理 media files</h1><p><a href="https://hexo.io/docs/asset-folders.html" target="_blank" rel="external">Hexo Official Assets Folder Doc</a><br>比较了一下各种存Assets的方法，还是觉得用 Post Assets Folder 会管理得比较清晰一点。在 Markdown 中也可以用 relative path 来引用 Assets Files.<br><br></p>
<p>设置方法也很简单，在 _config.yml 中</p>
<ul>
<li><code>post_asset_folder: true</code></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://jiajiewu1988.github.io/2016/11/11/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
